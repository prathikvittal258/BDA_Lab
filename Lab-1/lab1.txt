prathikvittal2508@Prathiks-MacBook-Pro ~ % cqlsh
/usr/local/Cellar/cassandra/4.0.4/libexec/bin/cqlsh.py:460: DeprecationWarning: Legacy execution parameters will be removed in 4.0. Consider using execution profiles.
/usr/local/Cellar/cassandra/4.0.4/libexec/bin/cqlsh.py:490: DeprecationWarning: Setting the consistency level at the session level will be removed in 4.0. Consider using execution profiles and setting the desired consitency level to the EXEC_PROFILE_DEFAULT profile.
Connected to Test Cluster at 127.0.0.1:9042
[cqlsh 6.0.0 | Cassandra 4.0.4 | CQL spec 3.4.5 | Native protocol v5]
Use HELP for help.
cqlsh> CREATE KEYSPACE Students WITH REPLICATION = { 'class':'SimpleStrategy', 'replication_factor':1};
cqlsh> DESCRIBE KEYSPACES

assignment  system_auth         system_traces        
students    system_distributed  system_views         
system      system_schema       system_virtual_schema

cqlsh> use students;
cqlsh:students> CREATE TABLE Student_info(
            ... RollNo int PRIMARY KEY,
            ... Name text,
            ... DateOfJoin timestamp,
            ... LastExamPercent double,
            ... );
cqlsh:students> DESCRIBE TABLE Student_info;

CREATE TABLE students.student_info (
    rollno int PRIMARY KEY,
    dateofjoin timestamp,
    lastexampercent double,
    name text
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND cdc = false
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND extensions = {}
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';
cqlsh:students> BEGIN BATCH INSERT INTO Student_info(RollNo, Name, DateOfJoin, LastExamPercent) VALUES(1,'Puneeth Kumar','2021-03-12',95.5) APPLY BATCH;
cqlsh:students> BEGIN BATCH INSERT INTO Student_info(RollNo, Name, DateOfJoin, LastExamPercent) VALUES(2,'Pankaj Gupta','2019-05-22',92.3) APPLY BATCH;
cqlsh:students> BEGIN BATCH INSERT INTO Student_info(RollNo, Name, DateOfJoin, LastExamPercent) VALUES(3,'Preetham','2017-01-19',89.9) APPLY BATCH;
cqlsh:students> SELECT * FROM Student_info;

 rollno | dateofjoin                      | lastexampercent | name
--------+---------------------------------+-----------------+---------------
      1 | 2021-03-11 18:30:00.000000+0000 |            95.5 | Puneeth Kumar
      2 | 2019-05-21 18:30:00.000000+0000 |            92.3 |  Pankaj Gupta
      3 | 2017-01-18 18:30:00.000000+0000 |            89.9 |      Preetham

(3 rows)
cqlsh:students> SELECT * FROM Student_info WHERE RollNo IN (1,2);

 rollno | dateofjoin                      | lastexampercent | name
--------+---------------------------------+-----------------+---------------
      1 | 2021-03-11 18:30:00.000000+0000 |            95.5 | Puneeth Kumar
      2 | 2019-05-21 18:30:00.000000+0000 |            92.3 |  Pankaj Gupta

(2 rows)
cqlsh:students> CREATE INDEX ON Student_info(Name);
cqlsh:students> SELECT * FROM Student_info WHERE Name='Preetham';

 rollno | dateofjoin                      | lastexampercent | name
--------+---------------------------------+-----------------+----------
      3 | 2017-01-18 18:30:00.000000+0000 |            89.9 | Preetham

(1 rows)
cqlsh:students> SELECT RollNo,Name, LastExamPercent FROM Student_info LIMIT 2;

 rollno | name          | lastexampercent
--------+---------------+-----------------
      1 | Puneeth Kumar |            95.5
      2 |  Pankaj Gupta |            92.3

(2 rows)
cqlsh:students> SELECT RollNo,LastExamPercent as "Score" FROM Student_info;

 rollno | Score
--------+-------
      1 |  95.5
      2 |  92.3
      3 |  89.9

(3 rows)
cqlsh:students> UPDATE Student_info SET LastExamPercent=97 WHERE RollNo=1;
cqlsh:students> SELECT * FROM Student_info;

 rollno | dateofjoin                      | lastexampercent | name
--------+---------------------------------+-----------------+---------------
      1 | 2021-03-11 18:30:00.000000+0000 |              97 | Puneeth Kumar
      2 | 2019-05-21 18:30:00.000000+0000 |            92.3 |  Pankaj Gupta
      3 | 2017-01-18 18:30:00.000000+0000 |            89.9 |      Preetham

(3 rows)
cqlsh:students> DELETE FROM Student_info WHERE RollNo=2;
cqlsh:students> SELECT * FROM Student_info;

 rollno | dateofjoin                      | lastexampercent | name
--------+---------------------------------+-----------------+---------------
      1 | 2021-03-11 18:30:00.000000+0000 |              97 | Puneeth Kumar
      3 | 2017-01-18 18:30:00.000000+0000 |            89.9 |      Preetham

(2 rows)
cqlsh:students> DELETE LastExamPercent FROM Student_info where RollNo=1;
cqlsh:students> SELECT * FROM Student_info
            ... ;

 rollno | dateofjoin                      | lastexampercent | name
--------+---------------------------------+-----------------+---------------
      1 | 2021-03-11 18:30:00.000000+0000 |            null | Puneeth Kumar
      3 | 2017-01-18 18:30:00.000000+0000 |            89.9 |      Preetham

(2 rows)
cqlsh:students> SELECT RollNo,LastExamPercent as "Score" FROM Student_info;

 rollno | Score
--------+-------
      1 |  null
      3 |  89.9

(2 rows)
cqlsh:students> UPDATE Student_info SET LastExamPercent=97 WHERE RollNo=1;
cqlsh:students> SELECT * FROM Student_info;

 rollno | dateofjoin                      | lastexampercent | name
--------+---------------------------------+-----------------+---------------
      1 | 2021-03-11 18:30:00.000000+0000 |              97 | Puneeth Kumar
      3 | 2017-01-18 18:30:00.000000+0000 |            89.9 |      Preetham

(2 rows)
cqlsh:students> CREATE TABLE Project_Details(
            ... pid int,
            ... pname text,
            ... stud_name text,
            ... duration int,
            ... PRIMARY KEY(pid,pname)
            ... );
cqlsh:students> DESCRIBE TABLE Project_Details;

CREATE TABLE students.project_details (
    pid int,
    pname text,
    duration int,
    stud_name text,
    PRIMARY KEY (pid, pname)
) WITH CLUSTERING ORDER BY (pname ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND cdc = false
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND extensions = {}
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';
cqlsh:students> BEGIN BATCH INSERT INTO Project_Details(pid,pname,duration,stud_name) VALUES(1,'LMS',3,'Puneeth Kumar') INSERT INTO Project_Details(pid,pname,duration,stud_name) VALUES(2,'Colab',4,'Preetham') APPLY BATCH;
cqlsh:students>  SELECT * FROM Project_Details;

 pid | pname | duration | stud_name
-----+-------+----------+---------------
   1 |   LMS |        3 | Puneeth Kumar
   2 | Colab |        4 |      Preetham

(2 rows)
cqlsh:students> SELECT * FROM Project_Details WHERE PID=2;

 pid | pname | duration | stud_name
-----+-------+----------+-----------
   2 | Colab |        4 |  Preetham

(1 rows)
cqlsh:students> CREATE INDEX ON Project_Details(stud_name);
cqlsh:students> SELECT * FROM Project_Details WHERE stud_name='Puneeth Kumar';

 pid | pname | duration | stud_name
-----+-------+----------+---------------
   1 |   LMS |        3 | Puneeth Kumar

(1 rows)
cqlsh:students> UPDATE Project_Details SET duration=5 WHERE pid=1 and pname='LMS';
cqlsh:students> SELECT * FROM Project_Details;

 pid | pname | duration | stud_name
-----+-------+----------+---------------
   1 |   LMS |        5 | Puneeth Kumar
   2 | Colab |        4 |      Preetham

(2 rows)
cqlsh:students> DELETE duration FROM Project_Details where pid=2 and pname='Colab';
cqlsh:students> SELECT * FROM Project_Details;

 pid | pname | duration | stud_name
-----+-------+----------+---------------
   1 |   LMS |        5 | Puneeth Kumar
   2 | Colab |     null |      Preetham

(2 rows)
cqlsh:students>
